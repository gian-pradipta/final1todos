{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server celler server.",
        "title": "Swagger Example API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "\"\"",
    "basePath": "https://final1todos-production.up.railway.app/",
    "paths": {
        "/todos/": {
            "get": {
                "description": "get all todoses",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "todos"
                ],
                "summary": "List todoses",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.TodosResponseBody"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dto.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create New Todos based on valid json request",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "todos"
                ],
                "summary": "Create new Todos",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.TodosResponseBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.HTTPError"
                        }
                    }
                }
            }
        },
        "/todos/{id}": {
            "get": {
                "description": "get one todos",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "todos"
                ],
                "summary": "One todos",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of todos to be presented",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.TodosResponseBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dto.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update one todos based on the ID and JSON supplied by the user",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "todos"
                ],
                "summary": "Update one todos",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of todos to be updated",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.TodosResponseBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dto.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete one todos base don the ID supplied by the user",
                "tags": [
                    "todos"
                ],
                "summary": "Delete one todos",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of todos to be deleted",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.TodosResponseBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dto.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.HTTPError": {
            "type": "object",
            "properties": {
                "errCode": {
                    "type": "integer"
                },
                "errMessage": {
                    "type": "string"
                }
            }
        },
        "dto.TodosResponseBody": {
            "type": "object",
            "required": [
                "deskripsi",
                "nama",
                "tanggal_mulai",
                "tanggal_selesai"
            ],
            "properties": {
                "deskripsi": {
                    "type": "string"
                },
                "nama": {
                    "type": "string"
                },
                "tanggal_mulai": {
                    "type": "string"
                },
                "tanggal_selesai": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}