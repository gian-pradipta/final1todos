basePath: /
definitions:
  dto.HTTPError:
    properties:
      errCode:
        type: integer
      errMessage:
        type: string
    type: object
  dto.TodosRequestBody:
    properties:
      deskripsi:
        type: string
      nama:
        type: string
      tanggal_mulai:
        type: string
      tanggal_selesai:
        type: string
    required:
    - deskripsi
    - nama
    - tanggal_mulai
    - tanggal_selesai
    type: object
  dto.TodosResponseBody:
    properties:
      deskripsi:
        type: string
      nama:
        type: string
      tanggal_mulai:
        type: string
      tanggal_selesai:
        type: string
    required:
    - deskripsi
    - nama
    - tanggal_mulai
    - tanggal_selesai
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: final1todos-production.up.railway.app
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /todos/:
    get:
      description: get all todoses
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.TodosResponseBody'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.HTTPError'
      summary: List todoses
      tags:
      - todos
    post:
      consumes:
      - application/json
      description: Create New Todos based on valid json request
      parameters:
      - description: Create todo request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.TodosRequestBody'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.TodosResponseBody'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.HTTPError'
      summary: Create new Todos
      tags:
      - todos
  /todos/{id}:
    delete:
      description: Delete one todos base don the ID supplied by the user
      parameters:
      - description: ID of todos to be deleted
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.TodosResponseBody'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.HTTPError'
      summary: Delete one todos
      tags:
      - todos
    get:
      description: get one todos
      parameters:
      - description: ID of todos to be presented
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.TodosResponseBody'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.HTTPError'
      summary: One todos
      tags:
      - todos
    put:
      consumes:
      - application/json
      description: Update one todos based on the ID and JSON supplied by the user
      parameters:
      - description: ID of todos to be updated
        in: path
        name: id
        required: true
        type: integer
      - description: Update todo request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.TodosRequestBody'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.TodosResponseBody'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.HTTPError'
      summary: Update one todos
      tags:
      - todos
schemes:
- https
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
